{"version":3,"sources":["card.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","cardSection","document","querySelector","cardDescription","recommendationsSection","URLmain","cardRender","data","console","log","title","createElement","classList","add","innerText","cardWrapper","oldPrice","price","discount","Math","round","insertAdjacentHTML","concat","image","dataset","text","addEventListener","e","basketStorage","JSON","parse","localStorage","getItem","titleProduct","newpriceProduct","oldriceProduct","imageProduct","countProduct","newArr","map","item","index","splice","findIndex","field","card","setItem","stringify","cardText","description","cartFull","init","fetch","then","response","json","floor","random","full","prepend","append","err","cardsRenderRecom","listWrapper","forEach","li","appendChild","initRecommendation","items","cards"],"mappings":"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","file":"../js/card.js","sourcesContent":["const cardSection = document.querySelector('.card');\r\nconst cardDescription = document.querySelector('.card__description');\r\nconst recommendationsSection = document.querySelector('.recommendations');\r\nconst URLmain = 'http://localhost:3000/api/goods';\r\n\r\n// Функция рендера карточки\r\nconst cardRender = (data) => {\r\n    console.log(data)\r\n\r\n    //    заголовок карточки\r\n        const title  = document.createElement('h2');\r\n        title.classList.add('card__name');\r\n        title.innerText = data.title;\r\n    \r\n    // информация карточки\r\n       const cardWrapper  = document.createElement('div');\r\n       cardWrapper.classList.add('card__wrapper');\r\n\r\n       let oldPrice = data.price;\r\n       let discount = 0;\r\n       if (data.discount) {\r\n           discount = data.discount;\r\n           oldPrice = Math.round(oldPrice + (oldPrice/100*discount));\r\n         } \r\n\r\n       cardWrapper.insertAdjacentHTML('afterbegin',\r\n                `<div class=\"card__img\">\r\n                     <img loading=\"lazy\" src= http://localhost:3000/${data.image} alt=\"Картинка товара\" width=\"540\" height=\"303\">   \r\n                </div>\r\n                <div class=\"card__basket-wrapper\">\r\n                    <div class=\"card__prices\">\r\n                        <span class=\"new-price\">${data.price} ₽</span>\r\n                        <span class=\"old-price\">${oldPrice} ₽</span>\r\n                    </div>\r\n                    <a href=\"#\" class=\"card__credit-link\">В кредит от 5600 ₽</a>\r\n                    <div class=\"card__buttons-wrapper\">\r\n                        <button class=\"card__btn-basket\">Добавить в корзину</button>\r\n                        <button class=\"card__btn-favourites\"><img src=\"img/icon-favourites.svg\" alt=\"\"></button>   \r\n                    </div>\r\n                    <div class=\"card__info-wrapper\">\r\n                        <div class=\"card__info-item\">\r\n                            <span>Доставка</span>\r\n                            <span class=\"card__info-date\">1-3 января</span>\r\n                        </div> \r\n                        <div class=\"card__info-item\">\r\n                            <span>Продавец</span>\r\n                            <span class=\"card__info-seller\">ShopOnline</span>\r\n                        </div> \r\n                    </div>\r\n                    <a href=\"#\" class=\"card__bell-link\"><img src=\"img/icon-bell.svg\" alt=\"\">Узнать о снижении цены</a>\r\n                </div>`\r\n                )\r\n                if (data.discount) {\r\n                    cardWrapper.querySelector('.card__img').classList.add('card__img-discount');\r\n                    cardWrapper.querySelector('.card__img').dataset.text = `${data.discount}%`;\r\n                  } \r\n                  \r\n                // функция добавления товара в корзину по клику\r\n                const btnBasket = cardWrapper.querySelector('.card__btn-basket');\r\n\r\n                btnBasket.addEventListener('click', (e) => {\r\n                    let basketStorage = JSON.parse(localStorage.getItem('basket')) || [];\r\n\r\n                    const titleProduct = data.title;\r\n                    const newpriceProduct = data.price;\r\n                    const oldriceProduct = oldPrice;\r\n                    const imageProduct = data.image;\r\n                    let countProduct = 1;\r\n                    const newArr = [...basketStorage];\r\n\r\n                    if (basketStorage.length && basketStorage !== []) {\r\n                        basketStorage.map((item, index) => {\r\n                            if (item.titleProduct == titleProduct) {\r\n                                countProduct = item.countProduct;\r\n                                newArr.splice(newArr.findIndex(item => item.field === \"titleProduct\"), 1);\r\n                                countProduct++;\r\n                            }\r\n                        })\r\n                    };\r\n                    const card = {titleProduct, imageProduct, newpriceProduct, oldriceProduct, countProduct};\r\n                    localStorage.setItem('basket', JSON.stringify([...newArr, card]))\r\n                });\r\n                \r\n \r\n        // описание карточки\r\n        const cardText  = document.createElement('p');\r\n        cardText.classList.add('card__description-text');\r\n        cardText.innerText = data.description;\r\n\r\n        return cartFull = {title, cardWrapper, cardText}\r\n    }\r\n\r\n\r\n// Загрузка данных карточки при загрузке\r\nconst init = () => {\r\n    fetch(URLmain)\r\n    .then((response) => response.json())\r\n    .then((data) => data[Math.floor(Math.random()*data.length)])\r\n    .then((item) => cardRender(item))\r\n    .then((full) => \r\n     cardSection.prepend(full.title, full.cardWrapper) &\r\n     cardDescription.append(full.cardText)\r\n    )\r\n    .catch((err) => {\r\n        console.log(err)\r\n    })\r\n}\r\ninit()\r\n\r\n\r\n\r\n// Функция рендера карточек для секции Рекомендуемые\r\nconst cardsRenderRecom = (data) => {\r\n    if(data) {\r\n       const listWrapper  = document.createElement('ul');\r\n       listWrapper.classList.add('sale__list');\r\n        \r\n        data.forEach((item, index) => {  \r\n          const li  = document.createElement('li');\r\n          li.classList.add('sale__item', `sale__item_${index+1}`);\r\n\r\n            let oldPrice = data[index].price;\r\n            let discount = 0;\r\n            if (data[index].discount) {\r\n                discount = data[index].discount;\r\n                oldPrice = Math.round(oldPrice + (oldPrice/100*discount));\r\n                li.classList.add('sale__item-discount');\r\n                li.dataset.text = `${data[index].discount}%`;\r\n              }   \r\n\r\n            li.insertAdjacentHTML('afterbegin',`\r\n                <img loading=\"lazy\" src= http://localhost:3000/${item.image} alt=\"Картинка скидок\" class=\"stock__img\" width=\"325\" height=\"295\">\r\n                <div class=\"sale__wrapper-prices\">\r\n                    <span class=\"price-sale\">${data[index].price} ₽</span>\r\n                    <span class=\"price-full\">${oldPrice} ₽</span>\r\n                </div>\r\n                <p class=\"sale__description\">${data[index].title}</p>`\r\n            );\r\n            listWrapper.appendChild(li);\r\n           \r\n        });\r\n        return listWrapper\r\n    }\r\n}\r\n\r\n// Загрузка блока рекомендаций при загрузке\r\nconst initRecommendation = () => {\r\n    fetch(URLmain)\r\n    .then((response) => response.json())\r\n    .then((data) => data.slice(0, 8))\r\n    .then((items) => cardsRenderRecom(items))\r\n    .then((cards) => recommendationsSection.append(cards))\r\n    .catch((err) => {\r\n        console.log(err)\r\n    })\r\n}\r\n    initRecommendation()"]}